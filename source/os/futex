Futex
----------------

引用
https://lwn.net/Articles/360699/

Futex为多线程编程提供了原语，使用它可以实现多种互斥的机制，例如pthread mutexes,
condvars, semaphores, rwlocks, and barriers。

Futex可以存储锁的状态，并且对于每个锁提供一个等待队列。

原子操作（例如cmpxchg）可以读锁并拿锁。

第一个线程尝试拿锁时，使用原子操作拿到锁，内核并不知道锁的存在。第二个线程拿锁时就会失败，并且需要内核的帮助。
阻塞的线程可以使用 ``FUTEX_WAIT`` 系统调用，从而使自己阻塞。这个系统调用的参数是 ``futex`` 那个锁。

释放锁的时候，线程需要先把锁设置为0，然后使用 ``FUTEX_WAKE`` 系统调用。内核会调度被阻塞的进程，该进程使用上面的
方法再次尝试拿锁。